plugins {
  id "net.ltgt.errorprone" version "0.0.9"
  id "info.solidsoft.pitest" version "1.1.11"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "info.solidsoft.pitest"
apply plugin: 'pmd'

description = "ZoomPaneFx is a special layout pane for JavaFx. It allows content to be zoomed in "
version = "one"
group = "net.bugabinga.javafx.scene.layout"
sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {

//TODO(oliver): Test using dependecies as submodules? Does this make a difference for proguard?

    runtime 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.1.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-core:2.7.14'
    testCompile "org.testfx:testfx-core:4.0.+"
    testCompile "org.testfx:testfx-junit:4.0.+"
}

//Dies ist wahrscheinlich temporär
//Über PIT und wie es mit dem build interagiert soll muss ich noch nachdenken
build.dependsOn "pitest"

pmd {
	ignoreFailures = false
	toolVersion = "5.5.4"
	ruleSets = [
            'java-android',
            'java-basic',
            'java-braces',
            'java-clone',
            'java-codesize',
            'java-comments',
            'java-controversial',
            'java-coupling',
            'java-design',
            'java-empty',
            'java-finalizers',
            'java-imports',
            'java-j2ee',
            'java-javabeans',
            'java-junit',
            'java-logging-jakarta-commons',
            'java-logging-java',
            'java-migrating',
            'java-naming',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            'java-sunsecure',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
            ]
}


